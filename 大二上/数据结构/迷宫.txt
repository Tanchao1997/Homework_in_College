// ConsoleApplication4.cpp: 定义控制台应用程序的入口点。
//

//#include "stdafx.h"
#include<stdio.h>
#include<stdlib.h>
#define maxlen 102
int main()
{
	int nl, nq;
	int map[maxlen][maxlen][6] = { 0 };//map[maxlen][maxlen][0]记录数字，map[maxlen][maxlen][1]记录是否被访问,2,3,4,5分别记录右，下，左，上是否被访问
	int stack[maxlen*maxlen][2] = { 0 };//记录路径
	int top = 0;
	scanf("%d%d", &nl, &nq);
	for (int i = 1; i <= nl; i++)
		for (int j = 1; j <= nq;j++ )
			scanf("%d", &map[i][j][0]);
	for (int i = 0; i <= nq + 1; i++)//将map四周全置为1
		map[0][i][0] = 1;
	for (int i = 0; i <= nq + 1; i++)
		map[nl+1][i][0] = 1;
	for (int i = 0; i <= nl + 1; i++)
		map[i][0][0] = 1;
	for (int i = 0; i <= nl + 1; i++)
		map[i][nq+1][0] = 1;
	int loc[2] = { 1,1 };
	do
	{
		if (map[loc[0]][loc[1]][0] == 0&&map[loc[0]][loc[1]][1] == 0)
		{
			if (stack[top][0] == loc[0] && stack[top][1] == loc[1]);
			else
			{
				//printf("<%d,%d>\n", loc[0], loc[1]);
				stack[++top][0] = loc[0];
				stack[top][1] = loc[1];
				map[loc[0]][loc[1]][1] = 1;
			}
			if (loc[0] == nl&&loc[1] == nq) break;
			else
			{ 
				if (map[loc[0]][loc[1]][2] == 0)
				{
					map[loc[0]][loc[1]][2] = 1;
					map[++loc[0]][loc[1]][5] = 1;
					//printf("<%d,%d>\n", loc[0], loc[1]);
				}
				else if (map[loc[0]][loc[1]][3] == 0)
				{
					map[loc[0]][loc[1]][3] = 1;
					map[loc[0]][++loc[1]][4] = 1;
					//printf("<%d,%d>\n", loc[0], loc[1]);
				}
				else if (map[loc[0]][loc[1]][4] == 0)
				{
					map[loc[0]][loc[1]][4] = 1;
					map[loc[0]][--loc[1]][3] = 1;
					//printf("<%d,%d>\n", loc[0], loc[1]);
				}
				else if (map[loc[0]][loc[1]][5] == 0)
				{
					map[loc[0]][loc[1]][5] = 1;
					map[--loc[0]][loc[1]][2] = 1;
					//printf("<%d,%d>\n", loc[0], loc[1]);
				}
				else
				{
					stack[top][0] = 0;
					stack[top][1] = 0;
					top--;
					loc[0] = stack[top][0];
					loc[1] = stack[top][1];
					map[loc[0]][loc[1]][1] = 0;
					//printf("<%d,%d>\n", loc[0], loc[1]);
				}
			}
		}
		else
		{
			loc[0] = stack[top][0];
			loc[1] = stack[top][1];
			map[loc[0]][loc[1]][1] = 0;
			//printf("<%d,%d> %d %d\n", loc[0], loc[1], map[loc[0]][loc[1]][0], map[loc[0]][loc[1]][1]);
		}
	}while (top != 0);
	for(int i=1;i<=top;i++)
	{
		printf("<%d,%d> ", stack[i][0], stack[i][1]);
	}
	if (top > 0) printf("\n");
	else
		printf("There is no solution!\n");
	//system("pause");
    return 0;
}



